{".NET Framework 4.0":{"name":"SharpDox.Sdk.Config","assembly":"SharpDox.Sdk","description":"<p>Der Config-Namensraum beinhaltet alle Interfaces, um eine eigene Konfigurationsektion zu erstellen.</p> \n<p>Nachfolgend ein Beispiel wie eine Konfigurationssektion mit einem einzelnen Konfigurationselement erstellt werden kann:</p> \n<pre><code class=\"language-csharp line-numbers\">using System; \nusing System.ComponentModel; \nusing SharpDox.Sdk.Config; \nusing SharpDox.Sdk.Config.Attributes; \n \nnamespace ExamplePlugin \n{ \n    [Name(typeof(ExampleStrings), &quot;ExampleConfig&quot;)] \n    public class ExampleConfig : IConfigSection \n    { \n        public event PropertyChangedEventHandler PropertyChanged; \n        protected void OnPropertyChanged(string propertyName) \n        { \n            var handler = PropertyChanged; \n            if (handler != null) handler(this, new PropertyChangedEventArgs(propertyName)); \n        } \n \n        private string _exampleItem; \n \n        [Required] \n        [Name(typeof(ExampleStrings), &quot;ExampleItem&quot;)] \n        public string ExampleItem \n        { \n            get { return _exampleItem; } \n            set \n            { \n                _exampleItem = value; \n                OnPropertyChanged(&quot;ExampleItem&quot;); \n            } \n        } \n \n        public Guid Guid { get { return new Guid(&quot;XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXXX&quot;); } }          \n    } \n}</code></pre> \n<p>Um eine Referenz zu dieser Konfiguration zu bekommen muss der Konstruktor eines Plugins lediglich mit dieser Konfiguration gefüllt werden. \n<strong>sharpDox</strong> kümmert sich darum, dass das Plugin daraufhin eine Referenz auf die Sektion erhält. Hier ein Beispiel:</p> \n<pre><code class=\"language-csharp line-numbers\">using SharpDox.Model; \nusing SharpDox.Model.Repository; \nusing SharpDox.Sdk.Exporter; \nusing System; \n \nnamespace ExampleExporter \n{ \n    public class ExampleExporter : IExporter \n    { \n        public event Action&lt;string&gt; OnRequirementsWarning; \n        public event Action&lt;string&gt; OnStepMessage; \n        public event Action&lt;int&gt; OnStepProgress; \n \n        private readonly ExampleConfig _exampleConfig; \n \n        //Fill the constructor with the config section \n        public ExampleExporter(ExampleConfig exampleConfig) \n        { \n            _exampleConfig = exampleConfig; \n        } \n \n        public bool CheckRequirements() \n        { \n            // Check for requirements \n        } \n \n        public void Export(SDProject sdProject, string outputPath) \n        { \n            //Exportcode \n        } \n \n        public string ExporterName { get { return &quot;example&quot;; } } \n    } \n}</code></pre>","types":[{"id":"SharpDox.Sdk.Config.IConfigController","accessibility":"public","name":"IConfigController","summary":"<p>Dieses Interface bildet alle Funktionen ab, die zur \nArbeit mit Konfigurationsdateien notwendig sind.</p>"},{"id":"SharpDox.Sdk.Config.IConfigSection","accessibility":"public","name":"IConfigSection","summary":"<p>Plugins, die Konfigurationseinstellungen benötigen, können dieses Interface implementieren.</p>"},{"id":"SharpDox.Sdk.Config.ICoreConfigSection","accessibility":"public","name":"ICoreConfigSection","summary":"<p>Alle Basis-Einstellungen für sharpDox.</p>"}]}}